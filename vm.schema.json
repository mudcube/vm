{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "VM Configuration Schema",
  "description": "Configuration schema for the VM development environment tool",
  "type": "object",
  "properties": {
    "provider": {
      "type": "string",
      "enum": ["vagrant", "docker"],
      "default": "docker",
      "description": "The virtualization provider to use. Docker provides lightweight containers (default), Vagrant provides full VM isolation."
    },
    "project": {
      "type": "object",
      "description": "Project-specific settings",
      "required": ["name", "workspace_path"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9-_]+$",
          "description": "Project name (alphanumeric, hyphens, underscores only). Used for VM/container naming."
        },
        "hostname": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9.-]+$",
          "description": "Hostname for the VM/container. Defaults to 'dev.{project.name}.local'"
        },
        "workspace_path": {
          "type": "string",
          "default": "/workspace",
          "description": "Path where project files are mounted inside the VM/container"
        },
        "env_template_path": {
          "type": "string",
          "description": "Path to .env template file (relative to project root). If set, copies to .env on provision."
        },
        "backup_pattern": {
          "type": "string",
          "default": "*backup*.sql.gz",
          "description": "Glob pattern for database backup files to auto-restore on provision"
        }
      }
    },
    "vm": {
      "type": "object",
      "description": "Virtual machine/container settings",
      "properties": {
        "box": {
          "type": "string",
          "default": "ubuntu/jammy64",
          "description": "Vagrant box to use (Vagrant provider only)"
        },
        "memory": {
          "type": "integer",
          "minimum": 512,
          "default": 2048,
          "description": "Memory allocation in MB"
        },
        "cpus": {
          "type": "integer",
          "minimum": 1,
          "default": 2,
          "description": "Number of CPU cores to allocate"
        },
        "user": {
          "type": "string",
          "default": "vagrant",
          "description": "Default user inside the VM/container"
        },
        "port_binding": {
          "type": "string",
          "enum": ["127.0.0.1", "0.0.0.0"],
          "default": "127.0.0.1",
          "description": "IP to bind forwarded ports. Use '127.0.0.1' for localhost only, '0.0.0.0' for all interfaces."
        },
        "gui": {
          "type": "boolean",
          "default": false,
          "description": "Enable GUI mode for VirtualBox (Vagrant provider only)"
        },
        "timezone": {
          "type": "string",
          "default": "America/Los_Angeles",
          "description": "System timezone (e.g., 'America/New_York', 'Europe/London', 'UTC')"
        }
      }
    },
    "versions": {
      "type": "object",
      "description": "Software version specifications",
      "properties": {
        "node": {
          "type": "string",
          "default": "22",
          "description": "Node.js version to install (e.g., '22', '20.11.0', 'lts/*')"
        },
        "nvm": {
          "type": "string",
          "default": "v0.39.7",
          "description": "NVM (Node Version Manager) version"
        },
        "pnpm": {
          "type": "string",
          "default": "9.15.4",
          "description": "pnpm package manager version"
        }
      }
    },
    "ports": {
      "type": "object",
      "description": "Port forwarding configuration. Maps service names to host ports.",
      "additionalProperties": {
        "type": "integer",
        "minimum": 1,
        "maximum": 65535
      },
      "examples": [
        {
          "frontend": 3000,
          "backend": 3001,
          "postgresql": 5432,
          "redis": 6379
        }
      ]
    },
    "services": {
      "type": "object",
      "description": "Optional service configurations",
      "properties": {
        "postgresql": {
          "type": "object",
          "description": "PostgreSQL database configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false,
              "description": "Enable PostgreSQL installation"
            },
            "user": {
              "type": "string",
              "default": "postgres",
              "description": "PostgreSQL superuser name"
            },
            "password": {
              "type": "string",
              "default": "postgres",
              "description": "PostgreSQL superuser password"
            },
            "database": {
              "type": "string",
              "description": "Default database name. Defaults to '{project.name}_dev'"
            },
            "port": {
              "type": "integer",
              "default": 5432,
              "description": "PostgreSQL port (inside VM/container)"
            }
          }
        },
        "redis": {
          "type": "object",
          "description": "Redis cache configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false,
              "description": "Enable Redis installation"
            },
            "port": {
              "type": "integer",
              "default": 6379,
              "description": "Redis port (inside VM/container)"
            }
          }
        },
        "mongodb": {
          "type": "object",
          "description": "MongoDB database configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false,
              "description": "Enable MongoDB installation"
            },
            "port": {
              "type": "integer",
              "default": 27017,
              "description": "MongoDB port (inside VM/container)"
            }
          }
        },
        "docker": {
          "type": "object",
          "description": "Docker inside VM configuration (Vagrant only)",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false,
              "description": "Enable Docker installation inside the VM"
            }
          }
        },
        "headless_browser": {
          "type": "object",
          "description": "Headless browser testing configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false,
              "description": "Enable headless Chrome/Chromium with Xvfb"
            },
            "display": {
              "type": "string",
              "default": ":99",
              "description": "X display number for Xvfb"
            },
            "executable_path": {
              "type": "string",
              "default": "/usr/bin/chromium-browser",
              "description": "Path to Chrome/Chromium executable"
            }
          }
        }
      }
    },
    "terminal": {
      "type": "object",
      "description": "Terminal customization options",
      "properties": {
        "emoji": {
          "type": "string",
          "default": "ðŸš€",
          "description": "Emoji to display in terminal prompt"
        },
        "username": {
          "type": "string",
          "default": "dev",
          "description": "Username to display in terminal prompt"
        },
        "theme": {
          "type": "string",
          "enum": [
            "dracula",
            "gruvbox_dark",
            "solarized_dark",
            "nord",
            "monokai",
            "one_dark",
            "catppuccin_mocha",
            "tokyo_night"
          ],
          "default": "dracula",
          "description": "Terminal color theme"
        },
        "show_git_branch": {
          "type": "boolean",
          "default": true,
          "description": "Show current git branch in prompt"
        },
        "show_timestamp": {
          "type": "boolean",
          "default": false,
          "description": "Show timestamp in prompt"
        }
      }
    },
    "npm_packages": {
      "type": "array",
      "description": "Global npm packages to install",
      "items": {
        "type": "string"
      },
      "examples": [
        ["typescript", "eslint", "prettier"]
      ]
    },
    "cargo_packages": {
      "type": "array",
      "description": "Global Cargo packages to install (triggers Rust installation)",
      "items": {
        "type": "string"
      },
      "examples": [
        ["cargo-watch", "cargo-edit", "tokei"]
      ]
    },
    "pip_packages": {
      "type": "array",
      "description": "Global pip packages to install (triggers Python/pyenv installation)",
      "items": {
        "type": "string"
      },
      "examples": [
        ["black", "pytest", "flake8", "mypy"]
      ]
    },
    "aliases": {
      "type": "object",
      "description": "Custom shell aliases",
      "additionalProperties": {
        "type": "string"
      },
      "examples": [
        {
          "dev": "pnpm dev",
          "test": "pnpm test",
          "build": "pnpm build"
        }
      ]
    },
    "environment": {
      "type": "object",
      "description": "Environment variables to set",
      "additionalProperties": {
        "type": "string"
      },
      "examples": [
        {
          "NODE_ENV": "development",
          "DEBUG": "true"
        }
      ]
    }
  },
  "required": ["project"],
  "additionalProperties": false
}